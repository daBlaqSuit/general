#!/usr/bin/python

import socket
import sys
import SocketServer
import select
from thread import *

host = '' #For all available interfaces
port = 8085 #Not assigned port by '' who assigns ports

print "Hello, Pythoneer :)!"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt( socket.SOL_SOCKET, socket.SO_REUSEADDR, 1 )

print 'Socket created'

try:
	s.bind((host, port))
except socket.error , msg:
	print 'Bind failed. Error Code: ' + str(msg[0]) + ' message ' + msg[1]
	sys.exit();

print 'Socket bind complete'

s.listen(10)

print 'Socket now listening...'

def clientthread(conn):

	#Message sent to connected client
	conn.send(' Welcome to daBlaqChat. Type something and hit enter\n\r\n ') #send

	#start loop of threads
	while True:

		data = conn.recv(2048)
		if data == "exit":
			#conn.close()
			#sys.exit(" user left... ")
			conn.sendall(" exited ")
			conn.close()
			return
		elif data:

			print 'Server recieved data: ' + data
			s.sendall(data)

	#End loop of threads

#Keep the Sever active

input = [s,sys.stdin]

while 1:
	print 'Waiting for incoming connection...'
	#Wait to accept connection - blocking call
	xinput,youtput,exception = select.select( input, [], [])

	for x in xinput:
		
		if x == s:
#Accept connections and store in variable 'input'
			conn, addr = s.accept()
			input.append(conn)
			conn.send('Happy Birthday')
		#print 'Connected with ' + addr[0] ':' + str(addr[1])

		elif x == sys.stdin:
			junk = sys.stdin.readline()
			data = 'nothing'
			conn.sendall(data)
		else:
			data = x.recv(2048)
			#for x in input:
			if data:
				x.sendall(data)
			else:
				x.close()
				input.remove(x)
	

	#Display client information
#	print 'Connected with ' + addr[0] + ':' + str(addr[1])
	#Talk to client again
#	start_new_thread(clientthread ,(conn,))

s.close()
